generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id          Int                @id @default(autoincrement())
  nome        String             @db.VarChar(100)
  email       String             @unique @db.VarChar(100)
  senha       String             @db.VarChar(255)
  regra       Permissao
  grupos      UsuariosOnGrupos[]
  anotacoes   String?            @db.Text
  telefone    String?            @db.VarChar(20)
  status      StatusUsuario      @default(ativo)
  dataCriacao DateTime           @default(now())
}

model UsuariosOnGrupos {
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId Int
  grupo     Grupos   @relation(fields: [grupoId], references: [id])
  grupoId   Int
  createdAt DateTime @default(now())
  createBy  Int

  @@id([usuarioId, grupoId])
}

model Grupos {
  id         Int                  @id @default(autoincrement())
  grupo      String               @db.VarChar(100)
  createdAt  DateTime             @default(now())
  usuarios   UsuariosOnGrupos[]
  permissoes PermissoesOnGrupos[]
}

model PermissoesOnGrupos {
  grupoId     Int
  grupo       Grupos     @relation(fields: [grupoId], references: [id])
  permissaoId Int
  permissao   Permissoes @relation(fields: [permissaoId], references: [id])
  createdBy   Int
  createdAt   DateTime   @default(now())

  @@id([permissaoId, grupoId])
}

model Permissoes {
  id        Int                  @id @default(autoincrement())
  permissao String
  createdAt DateTime             @default(now())
  status    StatusUsuario
  Grupos    PermissoesOnGrupos[]
}

model Cliente {
  id           Int           @id @default(autoincrement())
  nome         String        @db.VarChar(100)
  email        String        @unique @db.VarChar(100)
  telefone     String?       @db.VarChar(20)
  endereco     String?       @db.Text
  dataCriacao  DateTime      @default(now())
  status       StatusUsuario @default(ativo)
  dataBloqueio DateTime?
  Assinatura   Assinatura[]
  Transacao    Transacao[]
  Bloqueio     Bloqueio[]
}

model Plano {
  id          Int          @id @default(autoincrement())
  nome        String       @db.VarChar(100)
  descricao   String?      @db.Text
  preco       Float
  dataCriacao DateTime     @default(now())
  dataAtualizacao DateTime?
  Assinatura  Assinatura[]
}

model Assinatura {
  id         Int      @id @default(autoincrement())
  clienteId  Int
  planoId    Int
  dataInicio DateTime
  dataFim    DateTime
  status     Status   @default(ativa)
  createdAt  DateTime @default(now())
  Cliente    Cliente  @relation(fields: [clienteId], references: [id])
  Plano      Plano    @relation(fields: [planoId], references: [id])
}

model Transacao {
  id        Int      @id @default(autoincrement())
  clienteId Int
  data      DateTime
  valor     Float
  tipo      Tipo
  descricao String?  @db.Text
  Cliente   Cliente  @relation(fields: [clienteId], references: [id])
}

model Bloqueio {
  id              Int       @id @default(autoincrement())
  clienteId       Int
  motivo          String    @db.Text
  dataBloqueio    DateTime
  dataDesbloqueio DateTime?
  Cliente         Cliente   @relation(fields: [clienteId], references: [id])
}

enum Status {
  ativa
  vencida
  cancelada
}

enum Tipo {
  recebido
  pendente
}

enum StatusUsuario {
  ativo
  inativo
}

enum Permissao {
  admin
  gerente
  moderador
  submoderador
  visualizador
}
